name: db-sync sync tests

on:
  workflow_dispatch:
    inputs:
      node_tag:
        description: node version to be used with db-sync
        required: true
      db_sync_tag:
        description: db-sync version to be used. By default the latest release will be used
        required: false
        default: "None"

jobs:
  run_node:
    strategy:
      matrix:
        ghc: ["8.6.5"]
        os: [ubuntu-latest]
        env: [mainnet]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    steps:
      - name: checkout database-sync-tests repo
        uses: actions/checkout@v2
        with:
          path: database-sync-tests

      - name: print test details
        run: |
          echo "node_tag: ${{ github.event.inputs.node_tag }}"
          echo "Show github.workspace"
          echo ${{ github.workspace }}

      - name: run actions/setup-python@v2
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install python dependencies
        run: |
          pip install requests
          pip install psutil
          pip install sqlite-utils>=2.18
          sqlite-utils --version
          pip install pandas

      - name: Start node
        run: |
          ./database-sync-tests/start_node.sh -n ${{ matrix.env }} -t "${{ github.event.inputs.node_tag }}"

      - name: checkout cardano-db-sync repo
        uses: actions/checkout@v2
        with:
          repository: input-output-hk/cardano-db-sync
          path: cardano-db-sync

      - name: cardano-db-sync - fetch all tags
        run: |
          cd cardano-db-sync
          git checkout master
          git pull origin master
          git fetch --all --tags

      - name: Select build directory
        run: |
          echo "CABAL_BUILDDIR=dist"              >> $GITHUB_ENV
          echo "PLAN_JSON=dist/cache/plan.json"   >> $GITHUB_ENV
          echo "$HOME/.cabal/bin"                 >> $GITHUB_PATH

      - name: Install Postgres (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev libpq5 postgresql
          sudo pg_ctlcluster 13 main start

      - name: Check if postgres is running
        run: |
          sleep 20
          netstat -an
          ls -al /var/run/postgresql/.s.PGSQL.5432 || true
          ls -al || true

      - name: Select cabal version
        run: echo "CABAL_VERSION=3.4.0.0-rc4"  >> $GITHUB_ENV
      - uses: haskell/actions/setup@v1
        id: setup-haskell
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ env.CABAL_VERSION }}

      - name: Haskell versions
        run: |
          ghc --version
          cabal --version

      - name: Install build environment
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get -y install libsodium23 libsodium-dev
          sudo apt-get -y install libsystemd0 libsystemd-dev
          sudo apt-get -y remove --purge software-properties-common
          sudo apt-get -y autoremove
      - name: Cabal update
        run: cabal update

      - name: Check current directory
        run: |
          echo "I am here:"
          echo $PWD
          echo "List:"
          ls -l

      - name: Configure cabal
        run: |
          cd cardano-db-sync
          cabal configure --builddir="$CABAL_BUILDDIR" --write-ghc-environment-files=always

      - name: Add libsodium
        run: |
          cd cardano-db-sync
          cat >> cabal.project.local <<EOF
          package cardano-crypto-praos
            flags: -external-libsodium-vrf
          EOF

      - name: Record dependencies
        run: |
          cd cardano-db-sync
          cat ${{ env.PLAN_JSON }} | jq -r '."install-plan"[].id' | sort > dependencies.txt
      - uses: actions/cache@v2

        name: Cache cabal store
        with:
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          key: cache-cabal-store-v1-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('dependencies.txt') }}
          restore-keys: |
            cache-cabal-store-v1-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('dependencies.txt') }}
            cache-cabal-store-v1-${{ runner.os }}-${{ matrix.ghc }}-

      - name: Build
        run: |
          cd cardano-db-sync
          cabal build cardano-db-sync-extended

      - name: Set up database user (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: sudo -u postgres createuser --createdb --superuser runner

      - name: Setup and start db-sync
        run: |
          cd database-sync-tests
          ./start_db_sync.sh ${{ matrix.env }}

      - name: Generate node artifact
        uses: actions/upload-artifact@v2
        with:
          name: node_logs_${{ matrix.env }}
          path: /home/runner/work/database-sync-tests/database-sync-tests/cardano-node/node_logfile.log

      - name: Generate db-sync artifacts
        uses: actions/upload-artifact@v2
        with:
          name: db_sync_logs_${{ matrix.env }}
          path: /home/runner/work/database-sync-tests/database-sync-tests/cardano-db-sync/logs/*
